apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: prometheus
  name: prometheus
  namespace: ops
spec:
  serviceName: prometheus
  replicas: 2
  selector:
    matchLabels:
      app: prometheus
      thanos-store-api: "true"
  template:
    metadata:
      labels:
        app: prometheus
        thanos-store-api: "true"
    spec:
      serviceAccountName: prometheus
      volumes:
        - name: prometheus-config 
          configmap:
            name: prometheus-config
        - name: prometheus-rules
          configmap:
            name: prometheus-rules
        - name: prometheus-config-shared
          emptyDir: {}
      containers:
        - name: prometheus
          image: prom/prometheus:v2.16.0
          imagePullPolicy: IfNotPresent
          args:
            - --config.file=/etc/prometheus-shared/prometheus.yaml
            - --storage.tsdb.path=/prometheus
            - --storage.tsdb.retention=6h
            - --storage.tsdb.no-lockfile
            - --storage.tsdb.min-block-duration=2h # Thanos处理数据压缩
            - --storage.tsdb.max-block-duration=2h
            - --web.enable-admin-api # 通过一些命令去管理数据
            - --web.enable-lifecycle # 支持热更新
          ports:
            - containerPort: 9090
              name: web
              protocol: TCP
          resources:
            requests:
              cpu: 1
              memory: 512Mi
            limits:
              cpu: 2
              memory: 4Gi
          volumeMounts:
            - name: prometheus-config-shared
              mountPath: /etc/prometheus-shared/ 
            - name: prometheus-rules 
              mountPath: /etc/prometheus/rules 
            - name: /data 
              mountPath: /prometheus          
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /-/healthy
              port: web
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          readinessProbe:
            failureThreshold: 120
            httpGet:
              path: /-/ready
              port: web
              scheme: HTTP
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
        - name: thanos 
          image: quay.io/thanos/thanos:v0.12.2
          imagePullPolicy: IfNotPresent
          args:
            - sidecar
            - --log.level=debug 
            - --tsdb.path=/prometheus
            - --prometheus.rul=http://localhost:9090
            - --reloader.config-file=/etc/prometheus/prometheus.yaml.tmpl
            - --reloader.config-envsubset-file=/etc/prometheus-shared/prometheus.yaml
            - --reloader.rule-dir=/etc/prometheus/rules/
          ports:
            - name: http-sidecar
              containerPort: 10902
            - name: grpc
              containerPort: 10901
          env:
            - name: POD_NAME
              valueFrom:
                  fieldRef:
                    fieldPath: metadata.name
          resources:
            requests:
              cpu: 1
              memory: 512Mi
            limits:
              cpu: 2
              memory: 4Gi
          volumeMounts:
            - name: prometheus-config-shared
              mountPath: /etc/prometheus-shared/ 
            - name: prometheus-config 
              mountPath: /etc/prometheus
            - name: prometheus-rules 
              mountPath: /etc/prometheus/rules 
            - name: /data 
              mountPath: /prometheus   
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: data 
      labels:
        app: prometheus
    spec:
      accessModes:
      - ReadWriteMany
      resources:
        requests:
          storage: 200Gi
      storageClassName: alicloud-nas         
